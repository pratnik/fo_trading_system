services:
  - type: web
    name: app
    env: docker
    plan: standard
    dockerfilePath: ./Dockerfile
    # Use Docker's CMD as Start Command
    autoDeploy: true
    envVars:
      - key: SECRET_KEY
        sync: false
      - key: ENCRYPTION_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: fo-trading-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: fo-trading-redis
          property: connectionString
      - key: PORT
        value: 8501
    # Optional: only if you use SQLite or want disk persistence for logs/exports
    disks:
      - name: app-db
        mountPath: /opt/render/project/src/app/db
        sizeGB: 1

  - type: pserv
    name: celery-worker
    env: docker
    dockerfilePath: ./Dockerfile
    startCommand: celery -A app.tasks.celery_tasks worker --loglevel=info
    autoDeploy: true
    envVars:
      - key: SECRET_KEY
        sync: false
      - key: ENCRYPTION_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: fo-trading-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: fo-trading-redis
          property: connectionString

  - type: pserv
    name: celery-beat
    env: docker
    dockerfilePath: ./Dockerfile
    startCommand: celery -A app.tasks.celery_config.celery_app beat --loglevel=info
    autoDeploy: true
    envVars:
      - key: SECRET_KEY
        sync: false
      - key: ENCRYPTION_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: fo-trading-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: fo-trading-redis
          property: connectionString

databases:
  - name: fo-trading-postgres
    plan: standard

redis:
  - name: fo-trading-redis
    plan: free
