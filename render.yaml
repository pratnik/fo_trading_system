# render.yaml
services:
  - type: web
    name: fo-trading-system
    env: docker
    region: frankfurt  # or choose your preferred region
    dockerfilePath: ./Dockerfile
    # Render will build & run the Dockerfileâ€™s CMD
    healthCheckPath: /_stcore/health
    envVars:
      - key: DATABASE_URL
        sync: false   # auto-populated by Render Postgres addon
      - key: REDIS_URL
        sync: false   # auto-populated by Render Redis addon
      - key: SECRET_KEY
        generateValue: true
      - key: ENCRYPTION_KEY
        generateValue: true
      - key: GUPSHUP_API_KEY
        required: false
      - key: GUPSHUP_APP_NAME
        required: false
      - key: PORT
        value: "8501"

  - type: pserv
    name: fo-trading-postgres
    env: postgresql
    plan: starter    # or larger tier as needed
    databases:
      - name: fo_trading
        user: fo_user
    envVars:
      - key: PGDATA
        value: /var/lib/postgresql/data/pgdata

  - type: redis
    name: fo-trading-redis
    plan: starter    # or larger
    envVars: []

  - type: worker
    name: celery-worker
    env: docker
    region: frankfurt
    dockerfilePath: ./Dockerfile
    startCommand: celery -A app.tasks.celery_config.celery_app worker --loglevel=info
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: REDIS_URL
        sync: false
      - key: SECRET_KEY
        sync: false
      - key: ENCRYPTION_KEY
        sync: false

  - type: worker
    name: celery-beat
    env: docker
    region: frankfurt
    dockerfilePath: ./Dockerfile
    startCommand: celery -A app.tasks.celery_config.celery_app beat --loglevel=info
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: REDIS_URL
        sync: false
      - key: SECRET_KEY
        sync: false
      - key: ENCRYPTION_KEY
        sync: false

volumes:
  - name: app-db
    mountPath: /opt/render/project/src/app/db
    type: disk
    sizeGB: 1

cronJobs:
  - name: calendar-auto-refresh-check
    schedule: "0 6 * * *"  # every day at 06:00
    command: celery -A app.tasks.celery_tasks auto_refresh_calendar_check --loglevel=info
  - name: weekly-calendar-refresh
    schedule: "0 7 * * 0"  # Sundays at 07:00
    command: celery -A app.tasks.celery_tasks refresh_event_calendar --loglevel=info
  - name: new-year-calendar-refresh
    schedule: "0 6 1 1 *"  # Jan 1st at 06:00
    command: celery -A app.tasks.celery_tasks refresh_event_calendar --loglevel=info
